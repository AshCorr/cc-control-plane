function tableHasValue (table, val)
    for index, value in ipairs(table) do
        if value == val then
            return true
        end
    end

    return false
end

function getOrSetSettingNumber(setting, message)
    local settingValue = settings.get(setting)

    if turbineMaxEnergy == nil then
        print(message)
        settingValue = read():gsub('%W','')
        settingValue = tonumber(settingValue)
        settings.set(setting, settingValue)
        settings.save(".settings")
    end

    return settingValue
end

function getOrSetSettingString(setting, message)
    local settingValue = settings.get(setting)

    if turbineMaxEnergy == nil then
        print(message)
        settingValue = read()
        settings.set(setting, settingValue)
        settings.save(".settings")
    end

    return settingValue
end

function formatNumber(number)
    local i, j, minus, int, fraction = tostring(number):find('([-]?)(%d+)([.]?%d*)')

    -- reverse the int-string and append a comma to all blocks of 3 digits
    int = int:reverse():gsub("(%d%d%d)", "%1,")

    -- reverse the int-string back remove an optional comma and put the 
    -- optional minus and fractional part back
    return minus .. int:reverse():gsub("^,", "") .. fraction
end

function numberToString(amount)
    amount = tostring(amount)
    local formatted = amount
    while true do  
      formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
      if (k==0) then
        break
      end
    end
    return formatted
  end

function splitString(str, pat)
    local t = {}  -- NOTE: use {n = 0} in Lua-5.0
    local fpat = "(.-)" .. pat
    local last_end = 1
    local s, e, cap = str:find(fpat, 1)
    while s do
       if s ~= 1 or cap ~= "" then
          table.insert(t, cap)
       end
       last_end = e+1
       s, e, cap = str:find(fpat, last_end)
    end
    if last_end <= #str then
       cap = str:sub(last_end)
       table.insert(t, cap)
    end
    return t
 end

function newLine(monitor)
    local _,cY= monitor.getCursorPos()
    local _, sY = monitor.getSize();

    if cY == sY then
        monitor.scroll(1)
        monitor.setCursorPos(1, cY)
    else
        monitor.setCursorPos(1,cY+1)
    end
end